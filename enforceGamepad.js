// Generated by CoffeeScript 1.6.1
var enforceGamepad;

enforceGamepad = (function() {
  var __browser, __controllerID, __prepareflag_h, __prepareflag_v;

  __controllerID = ['Xbox 360', 'JC-U3613M', 'd9d.*?3013', 'BSGP1204P Series', 'BUFFALO BGC-FC801'];

  __browser = void 0;

  __prepareflag_h = void 0;

  __prepareflag_v = void 0;

  function enforceGamepad() {
    var _browser, _ua,
      _this = this;
    _ua = window.navigator.userAgent.toLowerCase();
    if (_ua.match(/.* firefox\/.*/)) {
      __browser = "firefox";
    } else if (_ua.match(/.*version\/.* safari\/.*/)) {
      __browser = "safari";
    } else if (_ua.match(/.*chrome\/.* safari\/.*/)) {
      __browser = "chrome";
    } else {
      _browser = "unknown";
    }
    this.controllers = [];
    window.addEventListener("gamepadconnected", function(e) {
      return _this.__addGamepad(e.gamepad);
    });
    window.addEventListener("gamepaddisconnected", function(e) {
      return _this.__delGamepad(e.gamepad);
    });
  }

  enforceGamepad.prototype.stat = function() {
    var gamepads, i, _i, _ref, _results;
    gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);
    _results = [];
    for (i = _i = 0, _ref = gamepads.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      _results.push(this.controllers[i] = this.__setControllerBind(gamepads[i]));
    }
    return _results;
  };

  enforceGamepad.prototype.__addGamepad = function(gamepad) {
    gamepad.axes[2] = void 0;
    gamepad.axes[5] = void 0;
    return this.controllers[gamepad.index] = this.__setControllerBind(gamepad);
  };

  enforceGamepad.prototype.__delGamepad = function(gamepad) {
    return this.controllers[gamepad.index] = void 0;
  };

  enforceGamepad.prototype.__setControllerBind = function(c) {
    var a, a9, b, down, i, key, left, lt, ret, right, rt, up, _i, _len;
    if (c == null) {
      return;
    }
    for (i = _i = 0, _len = __controllerID.length; _i < _len; i = ++_i) {
      key = __controllerID[i];
      if (c.id.match(key)) {
        break;
      }
    }
    ret = [];
    ret.id = c.id;
    ret.buttons = [];
    ret.axes = [[], []];
    ret.analog = [[], []];
    a = c.axes;
    b = c.buttons;
    switch (i) {
      case 0:
        if (__browser === "firefox") {
          ret.buttons[0] = b[11].value;
          ret.buttons[1] = b[12].value;
          ret.buttons[2] = b[13].value;
          ret.buttons[3] = b[14].value;
          ret.buttons[4] = b[8].value;
          ret.buttons[5] = b[9].value;
          lt = ((a[2] + 1) / 2).toFixed(2);
          if (lt !== parseFloat(0.5).toFixed(2)) {
            __prepareflag_h = true;
          }
          if (__prepareflag_h == null) {
            ret.buttons[6] = parseFloat(0).toFixed(2);
          } else {
            ret.buttons[6] = lt;
          }
          rt = ((a[5] + 1) / 2).toFixed(2);
          if (rt !== parseFloat(0.5).toFixed(2)) {
            __prepareflag_v = true;
          }
          if (__prepareflag_v == null) {
            ret.buttons[7] = parseFloat(0).toFixed(2);
          } else {
            ret.buttons[7] = rt;
          }
          ret.buttons[8] = b[5].value;
          ret.buttons[9] = b[4].value;
          ret.buttons[10] = b[6].value;
          ret.buttons[11] = b[7].value;
          ret.buttons[12] = b[10].value;
          ret.axes[0] = b[3].value - b[2].value;
          ret.axes[1] = b[1].value - b[0].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[3].toFixed(2), a[4].toFixed(2)];
        }
        if (__browser === "chrome") {
          ret.buttons[0] = b[0].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[2].value;
          ret.buttons[3] = b[3].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[5].value;
          ret.buttons[6] = b[6].value.toFixed(2);
          ret.buttons[7] = b[7].value.toFixed(2);
          ret.buttons[8] = b[8].value;
          ret.buttons[9] = b[9].value;
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          ret.buttons[12] = b[16].value;
          ret.axes[0] = b[15].value - b[14].value;
          ret.axes[1] = b[13].value - b[12].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[3].toFixed(2)];
        }
        if (__browser === "safari") {
          ret.buttons[0] = b[0].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[2].value;
          ret.buttons[3] = b[3].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[5].value;
          lt = ((a[4] + 1) / 2).toFixed(2);
          if (lt !== parseFloat(0.5).toFixed(2)) {
            __prepareflag_h = true;
          }
          if (__prepareflag_h == null) {
            ret.buttons[6] = parseFloat(0).toFixed(2);
          } else {
            ret.buttons[6] = lt;
          }
          rt = ((a[5] + 1) / 2).toFixed(2);
          if (rt !== parseFloat(0.5).toFixed(2)) {
            __prepareflag_v = true;
          }
          if (__prepareflag_v == null) {
            ret.buttons[7] = parseFloat(0).toFixed(2);
          } else {
            ret.buttons[7] = rt;
          }
          ret.buttons[8] = b[9].value;
          ret.buttons[9] = b[8].value;
          ret.buttons[10] = b[6].value;
          ret.buttons[11] = b[7].value;
          ret.buttons[12] = b[10].value;
          ret.axes[0] = b[14].value - b[13].value;
          ret.axes[1] = b[12].value - b[11].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[3].toFixed(2)];
        }
        break;
      case 1:
        if (__browser === "firefox") {
          ret.buttons[0] = b[2].value;
          ret.buttons[1] = b[3].value;
          ret.buttons[2] = b[0].value;
          ret.buttons[3] = b[1].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[5].value;
          ret.buttons[6] = b[6].value;
          ret.buttons[7] = b[7].value;
          ret.buttons[8] = b[10].value;
          ret.buttons[9] = b[11].value;
          ret.buttons[10] = b[8].value;
          ret.buttons[11] = b[9].value;
          ret.buttons[12] = b[12].value;
          ret.axes[0] = b[16].value - b[15].value;
          ret.axes[1] = b[14].value - b[13].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[3].toFixed(2)];
        }
        if (__browser === "chrome") {
          ret.buttons[0] = b[2].value;
          ret.buttons[1] = b[3].value;
          ret.buttons[2] = b[0].value;
          ret.buttons[3] = b[1].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[5].value;
          ret.buttons[6] = b[6].value;
          ret.buttons[7] = b[7].value;
          ret.buttons[8] = b[10].value;
          ret.buttons[9] = b[11].value;
          ret.buttons[10] = b[8].value;
          ret.buttons[11] = b[9].value;
          ret.buttons[12] = b[12].value;
          if (a[9].toFixed(1) === "0.7") {
            left = 1;
          } else {
            left = 0;
          }
          if (a[9].toFixed(1) === "-0.4") {
            right = 1;
          } else {
            right = 0;
          }
          if (a[9].toFixed(1) === "-1.0") {
            up = 1;
          } else {
            up = 0;
          }
          if (a[9].toFixed(1) === "0.1") {
            down = 1;
          } else {
            down = 0;
          }
          ret.axes[0] = right - left;
          ret.axes[1] = down - up;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[5].toFixed(2)];
        }
        if (__browser === "safari") {
          ret.buttons[0] = b[2].value;
          ret.buttons[1] = b[3].value;
          ret.buttons[2] = b[0].value;
          ret.buttons[3] = b[1].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[5].value;
          ret.buttons[6] = b[6].value;
          ret.buttons[7] = b[7].value;
          ret.buttons[8] = b[10].value;
          ret.buttons[9] = b[11].value;
          ret.buttons[10] = b[8].value;
          ret.buttons[11] = b[9].value;
          ret.buttons[12] = b[12].value;
          if (a[9].toFixed(1) === "0.7") {
            left = 1;
          } else {
            left = 0;
          }
          if (a[9].toFixed(1) === "-0.4") {
            right = 1;
          } else {
            right = 0;
          }
          if (a[9].toFixed(1) === "-1.0") {
            up = 1;
          } else {
            up = 0;
          }
          if (a[9].toFixed(1) === "0.1") {
            down = 1;
          } else {
            down = 0;
          }
          ret.axes[0] = right - left;
          ret.axes[1] = down - up;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[5].toFixed(2)];
        }
        break;
      case 2:
        if (__browser === "firefox") {
          ret.buttons[0] = b[0].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[2].value;
          ret.buttons[3] = b[3].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[6].value;
          ret.buttons[6] = b[5].value;
          ret.buttons[7] = b[7].value;
          if (b[8].value && !b[9].value) {
            ret.buttons[8] = 1;
          } else {
            ret.buttons[8] = 0;
          }
          if (!b[8].value && b[9].value) {
            ret.buttons[9] = 1;
          } else {
            ret.buttons[9] = 0;
          }
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          if (b[8].value && b[9].value) {
            ret.buttons[12] = 1;
          } else {
            ret.buttons[12] = 0;
          }
          ret.axes[0] = b[15].value - b[14].value;
          ret.axes[1] = b[13].value - b[12].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[3].toFixed(2)];
        }
        if (__browser === "chrome") {
          ret.buttons[0] = b[0].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[2].value;
          ret.buttons[3] = b[3].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[6].value;
          ret.buttons[6] = b[5].value;
          ret.buttons[7] = b[7].value;
          if (b[8].value && !b[9].value) {
            ret.buttons[8] = 1;
          } else {
            ret.buttons[8] = 0;
          }
          if (!b[8].value && b[9].value) {
            ret.buttons[9] = 1;
          } else {
            ret.buttons[9] = 0;
          }
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          if (b[8].value && b[9].value) {
            ret.buttons[12] = 1;
          } else {
            ret.buttons[12] = 0;
          }
          a9 = a[9].toFixed(1);
          if (a9 === "0.4" || a9 === "0.7" || a9 === "1.0") {
            left = 1;
          } else {
            left = 0;
          }
          if (a9 === "-0.1" || a9 === "-0.4" || a9 === "-0.7") {
            right = 1;
          } else {
            right = 0;
          }
          if (a9 === "1.0" || a9 === "-1.0" || a9 === "-0.7") {
            up = 1;
          } else {
            up = 0;
          }
          if (a9 === "0.4" || a9 === "0.1" || a9 === "-0.1") {
            down = 1;
          } else {
            down = 0;
          }
          ret.axes[0] = right - left;
          ret.axes[1] = down - up;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[5].toFixed(2)];
        }
        if (__browser === "safari") {
          ret.buttons[0] = b[0].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[2].value;
          ret.buttons[3] = b[3].value;
          ret.buttons[4] = b[4].value;
          ret.buttons[5] = b[6].value;
          ret.buttons[6] = b[5].value;
          ret.buttons[7] = b[7].value;
          if (b[8].value && !b[9].value) {
            ret.buttons[8] = 1;
          } else {
            ret.buttons[8] = 0;
          }
          if (!b[8].value && b[9].value) {
            ret.buttons[9] = 1;
          } else {
            ret.buttons[9] = 0;
          }
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          if (b[8].value && b[9].value) {
            ret.buttons[12] = 1;
          } else {
            ret.buttons[12] = 0;
          }
          a9 = a[9].toFixed(1);
          if (a9 === "0.4" || a9 === "0.7" || a9 === "1.0") {
            left = 1;
          } else {
            left = 0;
          }
          if (a9 === "-0.1" || a9 === "-0.4" || a9 === "-0.7") {
            right = 1;
          } else {
            right = 0;
          }
          if (a9 === "1.0" || a9 === "-1.0" || a9 === "-0.7") {
            up = 1;
          } else {
            up = 0;
          }
          if (a9 === "0.4" || a9 === "0.1" || a9 === "-0.1") {
            down = 1;
          } else {
            down = 0;
          }
          ret.axes[0] = right - left;
          ret.axes[1] = down - up;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[5].toFixed(2)];
        }
        break;
      case 3:
        if (__browser === "firefox") {
          ret.buttons[0] = b[2].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[3].value;
          ret.buttons[3] = b[0].value;
          ret.buttons[4] = b[6].value;
          ret.buttons[5] = b[7].value;
          ret.buttons[6] = b[4].value;
          ret.buttons[7] = b[5].value;
          if (b[8].value && !b[9].value) {
            ret.buttons[8] = 1;
          } else {
            ret.buttons[8] = 0;
          }
          if (!b[8].value && b[9].value) {
            ret.buttons[9] = 1;
          } else {
            ret.buttons[9] = 0;
          }
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          if (b[8].value && b[9].value) {
            ret.buttons[12] = 1;
          } else {
            ret.buttons[12] = 0;
          }
          ret.axes[0] = b[16].value - b[15].value;
          ret.axes[1] = b[14].value - b[13].value;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[3].toFixed(2)];
        }
        if (__browser === "chrome") {
          ret.buttons[0] = b[2].value;
          ret.buttons[1] = b[1].value;
          ret.buttons[2] = b[3].value;
          ret.buttons[3] = b[0].value;
          ret.buttons[4] = b[6].value;
          ret.buttons[5] = b[7].value;
          ret.buttons[6] = b[4].value;
          ret.buttons[7] = b[5].value;
          if (b[8].value && !b[9].value) {
            ret.buttons[8] = 1;
          } else {
            ret.buttons[8] = 0;
          }
          if (!b[8].value && b[9].value) {
            ret.buttons[9] = 1;
          } else {
            ret.buttons[9] = 0;
          }
          ret.buttons[10] = b[10].value;
          ret.buttons[11] = b[11].value;
          if (b[8].value && b[9].value) {
            ret.buttons[12] = 1;
          } else {
            ret.buttons[12] = 0;
          }
          if (a[9].toFixed(1) === "0.7") {
            left = 1;
          } else {
            left = 0;
          }
          if (a[9].toFixed(1) === "-0.4") {
            right = 1;
          } else {
            right = 0;
          }
          if (a[9].toFixed(1) === "-1.0") {
            up = 1;
          } else {
            up = 0;
          }
          if (a[9].toFixed(1) === "0.1") {
            down = 1;
          } else {
            down = 0;
          }
          ret.axes[0] = right - left;
          ret.axes[1] = down - up;
          ret.analog[0] = [a[0].toFixed(2), a[1].toFixed(2)];
          ret.analog[1] = [a[2].toFixed(2), a[5].toFixed(2)];
        }
        break;
      case 4:
        ret.buttons[0] = b[1].value;
        ret.buttons[1] = b[0].value;
        ret.buttons[2] = b[2].value;
        ret.buttons[3] = b[3].value;
        ret.buttons[4] = b[4].value;
        ret.buttons[5] = b[5].value;
        ret.buttons[6] = 0;
        ret.buttons[7] = 0;
        if (b[6].value && !b[7].value) {
          ret.buttons[8] = 1;
        } else {
          ret.buttons[8] = 0;
        }
        if (!b[6].value && b[7].value) {
          ret.buttons[9] = 1;
        } else {
          ret.buttons[9] = 0;
        }
        ret.buttons[10] = 0;
        ret.buttons[11] = 0;
        if (b[6].value && b[7].value) {
          ret.buttons[12] = 1;
        } else {
          ret.buttons[12] = 0;
        }
        ret.axes[0] = parseInt(a[0]);
        ret.axes[1] = parseInt(a[1]);
        ret.analog[0] = 0;
        ret.analog[1] = 0;
        break;
      default:
        ret.id = "other gamepad";
        if (c.buttons.length > 0) {
          ret.buttons[0] = b[0].value;
        }
        if (c.buttons.length > 1) {
          ret.buttons[1] = b[1].value;
        }
        if (c.buttons.length > 2) {
          ret.buttons[2] = b[2].value;
        }
        if (c.buttons.length > 3) {
          ret.buttons[3] = b[3].value;
        }
        if (c.buttons.length > 4) {
          ret.buttons[4] = b[4].value;
        }
        if (c.buttons.length > 5) {
          ret.buttons[5] = b[5].value;
        }
        if (c.buttons.length > 6) {
          ret.buttons[6] = b[6].value;
        }
        if (c.buttons.length > 7) {
          ret.buttons[7] = b[7].value;
        }
        if (c.buttons.length > 8) {
          ret.buttons[8] = b[8].value;
        }
        if (c.buttons.length > 9) {
          ret.buttons[9] = b[9].value;
        }
        if (c.buttons.length > 10) {
          ret.buttons[10] = b[10].value;
        }
        if (c.buttons.length > 11) {
          ret.buttons[11] = b[11].value;
        }
        if (c.buttons.length > 12) {
          ret.buttons[12] = b[12].value;
        }
        if (c.buttons.length > 13) {
          ret.buttons[13] = b[13].value;
        }
        if (c.buttons.length > 14) {
          ret.buttons[14] = b[14].value;
        }
        if (c.buttons.length > 15) {
          ret.buttons[15] = b[15].value;
        }
        if (c.buttons.length > 16) {
          ret.buttons[16] = b[16].value;
        }
        if (c.axes.length > 0) {
          ret.axes[0] = parseInt(a[0]);
        }
        if (c.axes.length > 1) {
          ret.axes[1] = parseInt(a[1]);
        }
    }
    return ret;
  };

  return enforceGamepad;

})();
